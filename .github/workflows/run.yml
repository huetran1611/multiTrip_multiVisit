name: Run algorithm

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Compile source files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: View system info
        run: lscpu

      - name: Setup Rust
        run: curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=1.89 -y

      - name: Compile source files
        run: cargo build --release

      - name: Display help menu
        run: target/release/min-timespan-delivery run --help

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: executable
          path: target/release/min-timespan-delivery

  solve-count-medium-a:
    name: Run algorithm
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        problem: [500.10.1, 500.10.2, 500.10.3, 500.10.4, 500.20.1, 500.20.2, 500.20.3, 500.20.4]
        trucks-count: [5, 6, 7, 8, 9]
        steps: [0, 1, 2, 3, 4]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Download executable
        uses: actions/download-artifact@v5
        with:
          name: executable
          path: .

      - name: Update permission
        run: chmod +x min-timespan-delivery

      - name: Run algorithm
        run: |
          exitcode=0
          set +e
          let steps_per_run=1
          let begin=$steps_per_run*${{ matrix.steps }}+1
          let end=$begin+$steps_per_run-1

          execute() {
            command=$1
            echo "Running \"$command\""
            $command

            status=$?
            if [ $status -ne 0 ]
            then
              echo "::error::\"$command\" exit with status $status"
              exitcode=1
            fi
          }

          for i in $(seq $begin $end)
          do
            echo "RUN #$i"
            for path in $(find problems/data/${{ matrix.problem }}.txt)
            do
              execute "./min-timespan-delivery run $path --trucks-count ${{ matrix.trucks-count }} --single-truck-route --disable-logging --extra ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            done
          done

          exit $exitcode

      - name: Upload results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: output-${{ matrix.problem }}-${{ matrix.trucks-count }}-${{ matrix.steps }}
          path: outputs/*

  solve-count-medium-b:
    name: Run algorithm
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        problem: [500.30.1, 500.30.2, 500.30.3, 500.30.4, 500.40.1, 500.40.2, 500.40.3, 500.40.4]
        trucks-count: [5, 6, 7, 8, 9]
        steps: [0, 1, 2, 3, 4]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Download executable
        uses: actions/download-artifact@v5
        with:
          name: executable
          path: .

      - name: Update permission
        run: chmod +x min-timespan-delivery

      - name: Run algorithm
        run: |
          exitcode=0
          set +e
          let steps_per_run=1
          let begin=$steps_per_run*${{ matrix.steps }}+1
          let end=$begin+$steps_per_run-1

          execute() {
            command=$1
            echo "Running \"$command\""
            $command

            status=$?
            if [ $status -ne 0 ]
            then
              echo "::error::\"$command\" exit with status $status"
              exitcode=1
            fi
          }

          for i in $(seq $begin $end)
          do
            echo "RUN #$i"
            for path in $(find problems/data/${{ matrix.problem }}.txt)
            do
              execute "./min-timespan-delivery run $path --trucks-count ${{ matrix.trucks-count }} --single-truck-route --disable-logging --extra ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            done
          done

          exit $exitcode

      - name: Upload results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: output-${{ matrix.problem }}-${{ matrix.trucks-count }}-${{ matrix.steps }}
          path: outputs/*

  summary:
    name: Summarize results
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [solve-count-medium-a, solve-count-medium-b]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download results
        uses: Serious-senpai/download-artifact@patch-1
        with:
          path: outputs/
          pattern: output-*
          merge-multiple: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Summarize results
        run: python scripts/summary.py

      - name: Upload summary files
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: summary-csv
          path: |
            outputs/summary.csv
            outputs/summary.db

      - name: Upload everything
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: summary
          path: outputs/*
