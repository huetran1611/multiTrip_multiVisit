name: Real drone specification

on: workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Compile source files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: View system info
        run: lscpu

      - name: Setup Rust
        run: curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=1.89 -y

      - name: Compile source files
        run: cargo build --release

      - name: Display help menu
        run: target/release/min-timespan-delivery run --help

      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: executable
          path: target/release/min-timespan-delivery

  solve:
    name: Run algorithm
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        delta: [
          {trucks-count: 0, drones-count: 0},
          {trucks-count: 1, drones-count: 0},
          {trucks-count: 2, drones-count: 0},
          {trucks-count: 3, drones-count: 0},
          {trucks-count: 0, drones-count: 1},
          {trucks-count: 0, drones-count: 2},
          {trucks-count: 0, drones-count: 3},
        ]
        steps: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Download executable
        uses: actions/download-artifact@v4
        with:
          name: executable
          path: .

      - name: Update permission
        run: chmod +x min-timespan-delivery

      - name: Run algorithm
        run: |
          exitcode=0
          set +e
          let begin=${{ matrix.steps }}+1
          let end=$begin+0

          execute() {
            command=$1
            echo "Running \"$command\""
            $command

            status=$?
            if [ $status -ne 0 ]; then
              echo "::error::\"$command\" exit with status $status"
              exitcode=1
            fi
          }

          for i in $(seq $begin $end)
          do
            echo "RUN #$i"
            for path in $(find problems/data/*)
            do
              let trucks_count=$(grep -oP '(?<=trucks_count )\d+' $path)+${{ matrix.delta.trucks-count }}
              let drones_count=${{ matrix.delta.drones-count }}

              execute "./min-timespan-delivery run $path --drone-cfg problems/config_parameter/uavsupplies.json --trucks-count $trucks_count --drones-count $drones_count --disable-logging --extra (${{ matrix.delta.trucks-count }}-${{ matrix.delta.drones-count }})"
            done
          done

          exit $exitcode

      - name: Upload results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: output-${{ matrix.delta.trucks-count }}-${{ matrix.delta.drones-count }}-${{ matrix.steps }}
          path: outputs/*

  summary:
    name: Summarize results
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: solve

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download results
        uses: actions/download-artifact@v4
        with:
          path: outputs/
          pattern: output-*
          merge-multiple: true

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Summarize results
        run: python scripts/summary.py

      - name: Upload summary files
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: summary-csv
          path: |
            outputs/summary.csv
            outputs/summary.db
